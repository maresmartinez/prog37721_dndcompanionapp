/*
Deployment script for DungeonsAndDragonsDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DungeonsAndDragonsDB"
:setvar DefaultFilePrefix "DungeonsAndDragonsDB"
:setvar DefaultDataPath "D:\Programs\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Programs\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[backgroundType]...';


GO
CREATE TABLE [dbo].[backgroundType] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (64)  NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_backgroundType] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[bgTypeBond]...';


GO
CREATE TABLE [dbo].[bgTypeBond] (
    [TypeId] INT NOT NULL,
    [BondId] INT NOT NULL,
    CONSTRAINT [PK_bgTypeBond] PRIMARY KEY CLUSTERED ([TypeId] ASC, [BondId] ASC)
);


GO
PRINT N'Creating [dbo].[bgTypeFlaw]...';


GO
CREATE TABLE [dbo].[bgTypeFlaw] (
    [TypeId] INT NOT NULL,
    [FlawId] INT NOT NULL,
    CONSTRAINT [PK_bgTypeFlawId] PRIMARY KEY CLUSTERED ([TypeId] ASC, [FlawId] ASC)
);


GO
PRINT N'Creating [dbo].[bgTypeIdeal]...';


GO
CREATE TABLE [dbo].[bgTypeIdeal] (
    [TypeId]  INT NOT NULL,
    [IdealId] INT NOT NULL,
    CONSTRAINT [PK_bgTypeIdeal] PRIMARY KEY CLUSTERED ([TypeId] ASC, [IdealId] ASC)
);


GO
PRINT N'Creating [dbo].[bgTypePersonality]...';


GO
CREATE TABLE [dbo].[bgTypePersonality] (
    [TypeId]        INT NOT NULL,
    [PersonalityId] INT NOT NULL,
    CONSTRAINT [PK_bgTypePersonality] PRIMARY KEY CLUSTERED ([TypeId] ASC, [PersonalityId] ASC)
);


GO
PRINT N'Creating [dbo].[bond]...';


GO
CREATE TABLE [dbo].[bond] (
    [Id]          INT            NOT NULL,
    [Description] NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK__bond__3214EC078873745A] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[campaign]...';


GO
CREATE TABLE [dbo].[campaign] (
    [Id]              INT            IDENTITY (1, 1) NOT NULL,
    [Name]            NVARCHAR (128) NOT NULL,
    [Description]     NVARCHAR (MAX) NOT NULL,
    [dungeonMasterId] INT            NOT NULL,
    CONSTRAINT [PK__campaign__3214EC074BF884FE] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[character]...';


GO
CREATE TABLE [dbo].[character] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (128) NOT NULL,
    [Notes]      NVARCHAR (MAX) NULL,
    [RaceID]     INT            NOT NULL,
    [ClassID]    INT            NOT NULL,
    [CharBackID] INT            NOT NULL,
    [Str]        INT            NOT NULL,
    [Dex]        INT            NOT NULL,
    [Con]        INT            NOT NULL,
    [Int]        INT            NOT NULL,
    [Wis]        INT            NOT NULL,
    [Chr]        INT            NOT NULL,
    [StrMod]     INT            NOT NULL,
    [DexMod]     INT            NOT NULL,
    [ConMod]     INT            NOT NULL,
    [IntMod]     INT            NOT NULL,
    [WisMod]     INT            NOT NULL,
    [ChrMod]     INT            NOT NULL,
    [Hair]       NVARCHAR (64)  NULL,
    [Eyes]       NVARCHAR (64)  NULL,
    [Skin]       NVARCHAR (64)  NULL,
    CONSTRAINT [PK__Characte__3214EC07F55D91BD] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[characterBackground]...';


GO
CREATE TABLE [dbo].[characterBackground] (
    [Id]               INT IDENTITY (1, 1) NOT NULL,
    [PersonalityID1]   INT NOT NULL,
    [PersonalityID2]   INT NOT NULL,
    [IdealID1]         INT NOT NULL,
    [IdealID2]         INT NOT NULL,
    [BondID1]          INT NOT NULL,
    [BondID2]          INT NOT NULL,
    [FlawID1]          INT NOT NULL,
    [FlawID2]          INT NOT NULL,
    [BackgroundTypeID] INT NOT NULL,
    CONSTRAINT [PK_charbackground] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[characterCampaign]...';


GO
CREATE TABLE [dbo].[characterCampaign] (
    [CharId]     INT NOT NULL,
    [CampaignId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CharId] ASC, [CampaignId] ASC)
);


GO
PRINT N'Creating [dbo].[characterSkills]...';


GO
CREATE TABLE [dbo].[characterSkills] (
    [CharacterID] INT NOT NULL,
    [SkillID]     INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CharacterID] ASC, [SkillID] ASC)
);


GO
PRINT N'Creating [dbo].[characterSpells]...';


GO
CREATE TABLE [dbo].[characterSpells] (
    [characterID] INT NOT NULL,
    [spellID]     INT NOT NULL,
    PRIMARY KEY CLUSTERED ([characterID] ASC, [spellID] ASC)
);


GO
PRINT N'Creating [dbo].[class]...';


GO
CREATE TABLE [dbo].[class] (
    [Id]             INT            NOT NULL,
    [Name]           NVARCHAR (128) NOT NULL,
    [Description]    NVARCHAR (256) NOT NULL,
    [hitDice]        INT            NOT NULL,
    [primaryAbility] NVARCHAR (64)  NOT NULL,
    [save1]          NVARCHAR (64)  NOT NULL,
    [save2]          NVARCHAR (64)  NOT NULL,
    CONSTRAINT [PK__class__3214EC07211F9033] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[classFeatures]...';


GO
CREATE TABLE [dbo].[classFeatures] (
    [ClassId]   INT NOT NULL,
    [FeatureId] INT NOT NULL,
    CONSTRAINT [PK_classFeatures_1] PRIMARY KEY CLUSTERED ([ClassId] ASC, [FeatureId] ASC)
);


GO
PRINT N'Creating [dbo].[classFeatures].[PK_classFeatures]...';


GO
CREATE NONCLUSTERED INDEX [PK_classFeatures]
    ON [dbo].[classFeatures]([ClassId] ASC, [FeatureId] ASC);


GO
PRINT N'Creating [dbo].[features]...';


GO
CREATE TABLE [dbo].[features] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (64)  NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_features] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[flaw]...';


GO
CREATE TABLE [dbo].[flaw] (
    [Id]          INT            NOT NULL,
    [Description] NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK__flaw__3214EC07347F66BB] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ideal]...';


GO
CREATE TABLE [dbo].[ideal] (
    [Id]          INT            NOT NULL,
    [Description] NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK__ideal__3214EC07A3B3F4E1] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[languages]...';


GO
CREATE TABLE [dbo].[languages] (
    [Id]   INT           NOT NULL,
    [Name] NVARCHAR (64) NOT NULL,
    CONSTRAINT [PK__language__3214EC0726149CFF] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[personality]...';


GO
CREATE TABLE [dbo].[personality] (
    [Id]          INT            NOT NULL,
    [Description] NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK__personal__3214EC078FB722D0] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[race]...';


GO
CREATE TABLE [dbo].[race] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (128) NOT NULL,
    [Description] NVARCHAR (256) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[raceLanguage]...';


GO
CREATE TABLE [dbo].[raceLanguage] (
    [RaceID]     INT NOT NULL,
    [LanguageID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([RaceID] ASC, [LanguageID] ASC)
);


GO
PRINT N'Creating [dbo].[skill]...';


GO
CREATE TABLE [dbo].[skill] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (64)  NOT NULL,
    [Description] NVARCHAR (256) NULL,
    CONSTRAINT [PK__skill__3214EC0710A73719] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[spells]...';


GO
CREATE TABLE [dbo].[spells] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (64)  NOT NULL,
    [castingTime] INT            NOT NULL,
    [Duration]    INT            NOT NULL,
    [Range]       INT            NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK__spells__3214EC073B5FD8DD] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[userCampaign]...';


GO
CREATE TABLE [dbo].[userCampaign] (
    [UserId]     INT NOT NULL,
    [CampaignId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [CampaignId] ASC)
);


GO
PRINT N'Creating [dbo].[userCharacter]...';


GO
CREATE TABLE [dbo].[userCharacter] (
    [userId] INT NOT NULL,
    [charId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([userId] ASC, [charId] ASC)
);


GO
PRINT N'Creating [dbo].[users]...';


GO
CREATE TABLE [dbo].[users] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [fullName] NVARCHAR (128) NOT NULL,
    [userName] NVARCHAR (128) NOT NULL,
    [Password] NVARCHAR (128) NOT NULL,
    [Salt]     NVARCHAR (128) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([userName] ASC)
);


GO
PRINT N'Creating [dbo].[FK_bgTypeBond_backgroundType]...';


GO
ALTER TABLE [dbo].[bgTypeBond]
    ADD CONSTRAINT [FK_bgTypeBond_backgroundType] FOREIGN KEY ([TypeId]) REFERENCES [dbo].[backgroundType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_bgTypeBond_bond]...';


GO
ALTER TABLE [dbo].[bgTypeBond]
    ADD CONSTRAINT [FK_bgTypeBond_bond] FOREIGN KEY ([BondId]) REFERENCES [dbo].[bond] ([Id]);


GO
PRINT N'Creating [dbo].[FK_bgTypeFlawId_backgroundType]...';


GO
ALTER TABLE [dbo].[bgTypeFlaw]
    ADD CONSTRAINT [FK_bgTypeFlawId_backgroundType] FOREIGN KEY ([TypeId]) REFERENCES [dbo].[backgroundType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_bgTypeFlawId_flaw]...';


GO
ALTER TABLE [dbo].[bgTypeFlaw]
    ADD CONSTRAINT [FK_bgTypeFlawId_flaw] FOREIGN KEY ([FlawId]) REFERENCES [dbo].[flaw] ([Id]);


GO
PRINT N'Creating [dbo].[FK_bgTypeIdeal_bgTypeIdeal]...';


GO
ALTER TABLE [dbo].[bgTypeIdeal]
    ADD CONSTRAINT [FK_bgTypeIdeal_bgTypeIdeal] FOREIGN KEY ([TypeId]) REFERENCES [dbo].[backgroundType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_bgTypeIdeal_ideal]...';


GO
ALTER TABLE [dbo].[bgTypeIdeal]
    ADD CONSTRAINT [FK_bgTypeIdeal_ideal] FOREIGN KEY ([IdealId]) REFERENCES [dbo].[ideal] ([Id]);


GO
PRINT N'Creating [dbo].[FK_bgTypePersonality_personality]...';


GO
ALTER TABLE [dbo].[bgTypePersonality]
    ADD CONSTRAINT [FK_bgTypePersonality_personality] FOREIGN KEY ([PersonalityId]) REFERENCES [dbo].[personality] ([Id]);


GO
PRINT N'Creating [dbo].[FK_character_charbackground]...';


GO
ALTER TABLE [dbo].[character]
    ADD CONSTRAINT [FK_character_charbackground] FOREIGN KEY ([CharBackID]) REFERENCES [dbo].[characterBackground] ([Id]);


GO
PRINT N'Creating [dbo].[FK_character_class]...';


GO
ALTER TABLE [dbo].[character]
    ADD CONSTRAINT [FK_character_class] FOREIGN KEY ([ClassID]) REFERENCES [dbo].[class] ([Id]);


GO
PRINT N'Creating [dbo].[FK_character_race]...';


GO
ALTER TABLE [dbo].[character]
    ADD CONSTRAINT [FK_character_race] FOREIGN KEY ([RaceID]) REFERENCES [dbo].[race] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_backgroundtyp]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_backgroundtyp] FOREIGN KEY ([BackgroundTypeID]) REFERENCES [dbo].[backgroundType] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_bond1]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_bond1] FOREIGN KEY ([BondID1]) REFERENCES [dbo].[bond] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_bond2]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_bond2] FOREIGN KEY ([BondID2]) REFERENCES [dbo].[bond] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_flaw1]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_flaw1] FOREIGN KEY ([FlawID1]) REFERENCES [dbo].[flaw] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_flaw2]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_flaw2] FOREIGN KEY ([FlawID2]) REFERENCES [dbo].[flaw] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_ideal]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_ideal] FOREIGN KEY ([IdealID1]) REFERENCES [dbo].[ideal] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_ideal2]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_ideal2] FOREIGN KEY ([IdealID2]) REFERENCES [dbo].[ideal] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_personality1]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_personality1] FOREIGN KEY ([PersonalityID1]) REFERENCES [dbo].[personality] ([Id]);


GO
PRINT N'Creating [dbo].[FK_charbackground_personality2]...';


GO
ALTER TABLE [dbo].[characterBackground]
    ADD CONSTRAINT [FK_charbackground_personality2] FOREIGN KEY ([PersonalityID2]) REFERENCES [dbo].[personality] ([Id]);


GO
PRINT N'Creating [dbo].[FK_characterSkills_character]...';


GO
ALTER TABLE [dbo].[characterSkills]
    ADD CONSTRAINT [FK_characterSkills_character] FOREIGN KEY ([CharacterID]) REFERENCES [dbo].[character] ([Id]);


GO
PRINT N'Creating [dbo].[FK_characterSkills_skill]...';


GO
ALTER TABLE [dbo].[characterSkills]
    ADD CONSTRAINT [FK_characterSkills_skill] FOREIGN KEY ([SkillID]) REFERENCES [dbo].[skill] ([Id]);


GO
PRINT N'Creating [dbo].[FK_characterSpells_character]...';


GO
ALTER TABLE [dbo].[characterSpells]
    ADD CONSTRAINT [FK_characterSpells_character] FOREIGN KEY ([characterID]) REFERENCES [dbo].[character] ([Id]);


GO
PRINT N'Creating [dbo].[FK_characterSpells_spells]...';


GO
ALTER TABLE [dbo].[characterSpells]
    ADD CONSTRAINT [FK_characterSpells_spells] FOREIGN KEY ([spellID]) REFERENCES [dbo].[spells] ([Id]);


GO
PRINT N'Creating [dbo].[FK_classFeatures_class]...';


GO
ALTER TABLE [dbo].[classFeatures]
    ADD CONSTRAINT [FK_classFeatures_class] FOREIGN KEY ([ClassId]) REFERENCES [dbo].[class] ([Id]);


GO
PRINT N'Creating [dbo].[FK_classFeatures_features]...';


GO
ALTER TABLE [dbo].[classFeatures]
    ADD CONSTRAINT [FK_classFeatures_features] FOREIGN KEY ([FeatureId]) REFERENCES [dbo].[features] ([Id]);


GO
PRINT N'Creating [dbo].[FK_raceLanguage_languages]...';


GO
ALTER TABLE [dbo].[raceLanguage]
    ADD CONSTRAINT [FK_raceLanguage_languages] FOREIGN KEY ([LanguageID]) REFERENCES [dbo].[languages] ([Id]);


GO
PRINT N'Creating [dbo].[FK_raceLanguage_race]...';


GO
ALTER TABLE [dbo].[raceLanguage]
    ADD CONSTRAINT [FK_raceLanguage_race] FOREIGN KEY ([RaceID]) REFERENCES [dbo].[race] ([Id]);


GO
PRINT N'Creating [dbo].[race].[Description].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = '', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'race', @level2type = N'COLUMN', @level2name = N'Description';


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
